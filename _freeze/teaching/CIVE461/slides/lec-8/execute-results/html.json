{
  "hash": "4babce0ef25cfe3546164a625a324b8a",
  "result": {
    "markdown": "---\ntitle: \"Lecture 8 - Trip Distribution\"\nsubtitle: \"CIVE 461/861: Urban Transportation Planning - Fall 2023\"\nfooter:  \"[CIVE461 Home](/teaching/CIVE461/)\"\nlogo: \"../images/logo.png\"\neditor: visual\nformat: \n  revealjs: \n    theme: simple\n    transition: fade\n    chalkboard: true\n    slide-number: true\nexecute:\n  freeze: auto\n---\n\n## Three Route Example\n\n\n```{mermaid}\nflowchart LR\n  A[P] ---->|1| B(Q)\n  A[P] ---->|2| B(Q)\n  A[P] ---->|3| B(Q)\n```\n\n$$f_1(v_1) = 10(1+0.15(v_1/200)^4)$$\n$$f_2(v_2) = 20(1+0.15(v_1/400)^4)$$\n$$f_3(v_3) = 25(1+0.15(v_1/300)^4)$$\n\n## Three Route Example - Solution {.smaller}\nWe'll start by creating a Pandas dataframe to store the iteration variables\n```{.python code-line-numbers=\"5-15\"}\nimport pandas as pd\nimport numpy as np\nfrom scipy.optimize import minimize_scalar\n\ndf = pd.DataFrame({\"f1\": pd.Series(dtype='float'),\n                  \"f2\": pd.Series(dtype='float'),\n                  \"f3\": pd.Series(dtype='float'),\n                  \"V1\": pd.Series(dtype='float'),\n                  \"V2\": pd.Series(dtype='float'),\n                  \"V3\": pd.Series(dtype='float'),\n                  \"F1\": pd.Series(dtype='float'),\n                  \"F2\": pd.Series(dtype='float'),\n                  \"F3\": pd.Series(dtype='float'),\n                  \"F\": pd.Series(dtype='float'),\n                  \"lambda\": pd.Series(dtype='float')})\n```\n\n ## Three Route Example - Solution {.smaller}\nWe can then define the inputs to the traffic assignment algorithm.\n```{.python}\n# Specify the freeflow travel times/capacities\nff_tt_1 = 10\nff_tt_2 = 20\nff_tt_3 = 25\nC1 = 200\nC2 = 400\nC3 = 300\n\nvolume = 1000 # veh/hr\nmin_tt = np.min([ff_tt_1, ff_tt_2, ff_tt_3]) # minimum travel time\n\n# Define the volumes on each link (1,2, and 3)\nV1 = volume if (ff_tt_1==min_tt) else 0\nV2 = volume if (ff_tt_2==min_tt) else 0\nV3 = volume if (ff_tt_3==min_tt) else 0\n\n# Define total costs as integrals of travel time costs over volume\nF1 = ff_tt_1*V1 + ff_tt_1*0.15/C1**4*V1**5/5 \nF2 = ff_tt_2*V2 + ff_tt_2*0.15/C2**4*V2**5/5\nF3 = ff_tt_3*V3 + ff_tt_3*0.15/C3**4*V3**5/5\nF = F1 + F2 + F3\n\nl = 1.0 # intialize lambda to 1.0\ntol = 10**-2 # tolerance on the difference in total cost between iterations\n\nrow = [ff_tt_1, ff_tt_2, ff_tt_3, V1, V2, V3, F1, F2, F3, F, l]\ndf.loc[len(df),:] = row # add initial values to df\n```\n\n ## Three Route Example - Solution {.smaller}\nNext we define the Frank-Wolfe algorithm and solve for $\\lambda$ using ```scipy optimize minimize_scalar```. The first step is to define a loop that repeatedly calls the minimization on a new set of volumes. We define the Frank-Wolfe algorithm and solve for $\\lambda$ using ```scipy optimize minimize_scalar```. The next step is to define the optimization problem. We'll define the optimization in two functions: ```get_optimal_vals``` calculates the various values we need in each iteration and ```FW_Alg``` defines the function to be minized by ```scipy optimize minimize_scalar```.\n\n```{.python code-line-numbers=\"26-38|2-4|7-22\"}\n# Apply the Frank-Wolfe algorithm on the example dataset\ndef FW_Alg(x, prev_iter):\n  f1, f2, f3, V1, V2, V3, F1, F2, F3 = get_optimal_vals(x, prev_iter)\n  return (F1 + F2 + F3)\n\n# Function computes the various traffic assignment algorithm values at optimality\ndef get_optimal_vals(x, prev_iter):\n  f1 = ff_tt_1*(1+0.15*(prev_iter[\"V1\"]/C1)**4)\n  f2 = ff_tt_2*(1+0.15*(prev_iter[\"V2\"]/C2)**4)\n  f3 = ff_tt_3*(1+0.15*(prev_iter[\"V3\"]/C3)**4)\n\n  min_tt = np.min([f1, f2, f3]) # minimum travel time\n\n  V1 = x*prev_iter[\"V1\"] + (1-x)*(volume if f1==min_tt else 0)\n  V2 = x*prev_iter[\"V2\"] + (1-x)*(volume if f2==min_tt else 0)\n  V3 = x*prev_iter[\"V3\"] + (1-x)*(volume if f3==min_tt else 0)\n\n  F1 = ff_tt_1*V1 + ff_tt_1*0.15/C1**4*V1**5/5\n  F2 = ff_tt_2*V2 + ff_tt_2*0.15/C2**4*V2**5/5\n  F3 = ff_tt_3*V3 + ff_tt_3*0.15/C3**4*V3**5/5\n\n  return f1, f2, f3, V1, V2, V3, F1, F2, F3\n\nF_diff = F \n\nwhile F_diff > tol:\n  F_diff = F\n  prev_iter = df.iloc[-1] # Get the values from the last iteration\n\n  res = minimize_scalar(FW_Alg, args=(prev_iter), bounds=[0,1])\n  F = res.fun\n  l = res.x\n  f1, f2, f3, V1, V2, V3, F1, F2, F3 = get_optimal_vals(l, prev_iter)\n\n  row = [f1, f2, f3, V1, V2, V3, F1, F2, F3, F, l]\n  df.loc[len(df),:] = row\n\n  F_diff = F_diff - F\n```\n\n ## Three Route Example - Solution {.smaller}\nPutting everything together, we can print a table summarizing the variable values at each iteration.\n\n::: {.cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<style type=\"text/css\">\n#T_0caaa_row0_col0, #T_0caaa_row0_col1, #T_0caaa_row0_col2, #T_0caaa_row0_col3, #T_0caaa_row0_col4, #T_0caaa_row0_col5, #T_0caaa_row0_col6, #T_0caaa_row0_col7, #T_0caaa_row0_col8, #T_0caaa_row0_col9, #T_0caaa_row0_col10, #T_0caaa_row1_col0, #T_0caaa_row1_col1, #T_0caaa_row1_col2, #T_0caaa_row1_col3, #T_0caaa_row1_col4, #T_0caaa_row1_col5, #T_0caaa_row1_col6, #T_0caaa_row1_col7, #T_0caaa_row1_col8, #T_0caaa_row1_col9, #T_0caaa_row1_col10, #T_0caaa_row2_col0, #T_0caaa_row2_col1, #T_0caaa_row2_col2, #T_0caaa_row2_col3, #T_0caaa_row2_col4, #T_0caaa_row2_col5, #T_0caaa_row2_col6, #T_0caaa_row2_col7, #T_0caaa_row2_col8, #T_0caaa_row2_col9, #T_0caaa_row2_col10, #T_0caaa_row3_col0, #T_0caaa_row3_col1, #T_0caaa_row3_col2, #T_0caaa_row3_col3, #T_0caaa_row3_col4, #T_0caaa_row3_col5, #T_0caaa_row3_col6, #T_0caaa_row3_col7, #T_0caaa_row3_col8, #T_0caaa_row3_col9, #T_0caaa_row3_col10, #T_0caaa_row4_col0, #T_0caaa_row4_col1, #T_0caaa_row4_col2, #T_0caaa_row4_col3, #T_0caaa_row4_col4, #T_0caaa_row4_col5, #T_0caaa_row4_col6, #T_0caaa_row4_col7, #T_0caaa_row4_col8, #T_0caaa_row4_col9, #T_0caaa_row4_col10, #T_0caaa_row5_col0, #T_0caaa_row5_col1, #T_0caaa_row5_col2, #T_0caaa_row5_col3, #T_0caaa_row5_col4, #T_0caaa_row5_col5, #T_0caaa_row5_col6, #T_0caaa_row5_col7, #T_0caaa_row5_col8, #T_0caaa_row5_col9, #T_0caaa_row5_col10, #T_0caaa_row6_col0, #T_0caaa_row6_col1, #T_0caaa_row6_col2, #T_0caaa_row6_col3, #T_0caaa_row6_col4, #T_0caaa_row6_col5, #T_0caaa_row6_col6, #T_0caaa_row6_col7, #T_0caaa_row6_col8, #T_0caaa_row6_col9, #T_0caaa_row6_col10, #T_0caaa_row7_col0, #T_0caaa_row7_col1, #T_0caaa_row7_col2, #T_0caaa_row7_col3, #T_0caaa_row7_col4, #T_0caaa_row7_col5, #T_0caaa_row7_col6, #T_0caaa_row7_col7, #T_0caaa_row7_col8, #T_0caaa_row7_col9, #T_0caaa_row7_col10 {\n  font-size: 20pt;\n}\n</style>\n<table id=\"T_0caaa\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th id=\"T_0caaa_level0_col0\" class=\"col_heading level0 col0\" >f1</th>\n      <th id=\"T_0caaa_level0_col1\" class=\"col_heading level0 col1\" >f2</th>\n      <th id=\"T_0caaa_level0_col2\" class=\"col_heading level0 col2\" >f3</th>\n      <th id=\"T_0caaa_level0_col3\" class=\"col_heading level0 col3\" >V1</th>\n      <th id=\"T_0caaa_level0_col4\" class=\"col_heading level0 col4\" >V2</th>\n      <th id=\"T_0caaa_level0_col5\" class=\"col_heading level0 col5\" >V3</th>\n      <th id=\"T_0caaa_level0_col6\" class=\"col_heading level0 col6\" >F1</th>\n      <th id=\"T_0caaa_level0_col7\" class=\"col_heading level0 col7\" >F2</th>\n      <th id=\"T_0caaa_level0_col8\" class=\"col_heading level0 col8\" >F3</th>\n      <th id=\"T_0caaa_level0_col9\" class=\"col_heading level0 col9\" >F</th>\n      <th id=\"T_0caaa_level0_col10\" class=\"col_heading level0 col10\" >lambda</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_0caaa_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n      <td id=\"T_0caaa_row0_col0\" class=\"data row0 col0\" >10.00</td>\n      <td id=\"T_0caaa_row0_col1\" class=\"data row0 col1\" >20.00</td>\n      <td id=\"T_0caaa_row0_col2\" class=\"data row0 col2\" >25.00</td>\n      <td id=\"T_0caaa_row0_col3\" class=\"data row0 col3\" >1000.00</td>\n      <td id=\"T_0caaa_row0_col4\" class=\"data row0 col4\" >0.00</td>\n      <td id=\"T_0caaa_row0_col5\" class=\"data row0 col5\" >0.00</td>\n      <td id=\"T_0caaa_row0_col6\" class=\"data row0 col6\" >197500.00</td>\n      <td id=\"T_0caaa_row0_col7\" class=\"data row0 col7\" >0.00</td>\n      <td id=\"T_0caaa_row0_col8\" class=\"data row0 col8\" >0.00</td>\n      <td id=\"T_0caaa_row0_col9\" class=\"data row0 col9\" >197500.00</td>\n      <td id=\"T_0caaa_row0_col10\" class=\"data row0 col10\" >1.00</td>\n    </tr>\n    <tr>\n      <th id=\"T_0caaa_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n      <td id=\"T_0caaa_row1_col0\" class=\"data row1 col0\" >947.50</td>\n      <td id=\"T_0caaa_row1_col1\" class=\"data row1 col1\" >20.00</td>\n      <td id=\"T_0caaa_row1_col2\" class=\"data row1 col2\" >25.00</td>\n      <td id=\"T_0caaa_row1_col3\" class=\"data row1 col3\" >403.46</td>\n      <td id=\"T_0caaa_row1_col4\" class=\"data row1 col4\" >596.54</td>\n      <td id=\"T_0caaa_row1_col5\" class=\"data row1 col5\" >0.00</td>\n      <td id=\"T_0caaa_row1_col6\" class=\"data row1 col6\" >6039.00</td>\n      <td id=\"T_0caaa_row1_col7\" class=\"data row1 col7\" >13701.45</td>\n      <td id=\"T_0caaa_row1_col8\" class=\"data row1 col8\" >0.00</td>\n      <td id=\"T_0caaa_row1_col9\" class=\"data row1 col9\" >19740.44</td>\n      <td id=\"T_0caaa_row1_col10\" class=\"data row1 col10\" >0.40</td>\n    </tr>\n    <tr>\n      <th id=\"T_0caaa_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n      <td id=\"T_0caaa_row2_col0\" class=\"data row2 col0\" >34.84</td>\n      <td id=\"T_0caaa_row2_col1\" class=\"data row2 col1\" >34.84</td>\n      <td id=\"T_0caaa_row2_col2\" class=\"data row2 col2\" >25.00</td>\n      <td id=\"T_0caaa_row2_col3\" class=\"data row2 col3\" >338.45</td>\n      <td id=\"T_0caaa_row2_col4\" class=\"data row2 col4\" >500.42</td>\n      <td id=\"T_0caaa_row2_col5\" class=\"data row2 col5\" >161.13</td>\n      <td id=\"T_0caaa_row2_col6\" class=\"data row2 col6\" >4217.09</td>\n      <td id=\"T_0caaa_row2_col7\" class=\"data row2 col7\" >10743.87</td>\n      <td id=\"T_0caaa_row2_col8\" class=\"data row2 col8\" >4038.43</td>\n      <td id=\"T_0caaa_row2_col9\" class=\"data row2 col9\" >18999.39</td>\n      <td id=\"T_0caaa_row2_col10\" class=\"data row2 col10\" >0.84</td>\n    </tr>\n    <tr>\n      <th id=\"T_0caaa_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n      <td id=\"T_0caaa_row3_col0\" class=\"data row3 col0\" >22.30</td>\n      <td id=\"T_0caaa_row3_col1\" class=\"data row3 col1\" >27.35</td>\n      <td id=\"T_0caaa_row3_col2\" class=\"data row3 col2\" >25.31</td>\n      <td id=\"T_0caaa_row3_col3\" class=\"data row3 col3\" >361.97</td>\n      <td id=\"T_0caaa_row3_col4\" class=\"data row3 col4\" >482.63</td>\n      <td id=\"T_0caaa_row3_col5\" class=\"data row3 col5\" >155.41</td>\n      <td id=\"T_0caaa_row3_col6\" class=\"data row3 col6\" >4784.70</td>\n      <td id=\"T_0caaa_row3_col7\" class=\"data row3 col7\" >10266.28</td>\n      <td id=\"T_0caaa_row3_col8\" class=\"data row3 col8\" >3893.55</td>\n      <td id=\"T_0caaa_row3_col9\" class=\"data row3 col9\" >18944.53</td>\n      <td id=\"T_0caaa_row3_col10\" class=\"data row3 col10\" >0.96</td>\n    </tr>\n    <tr>\n      <th id=\"T_0caaa_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n      <td id=\"T_0caaa_row4_col0\" class=\"data row4 col0\" >26.09</td>\n      <td id=\"T_0caaa_row4_col1\" class=\"data row4 col1\" >26.36</td>\n      <td id=\"T_0caaa_row4_col2\" class=\"data row4 col2\" >25.27</td>\n      <td id=\"T_0caaa_row4_col3\" class=\"data row4 col3\" >354.58</td>\n      <td id=\"T_0caaa_row4_col4\" class=\"data row4 col4\" >472.78</td>\n      <td id=\"T_0caaa_row4_col5\" class=\"data row4 col5\" >172.64</td>\n      <td id=\"T_0caaa_row4_col6\" class=\"data row4 col6\" >4596.77</td>\n      <td id=\"T_0caaa_row4_col7\" class=\"data row4 col7\" >10009.25</td>\n      <td id=\"T_0caaa_row4_col8\" class=\"data row4 col8\" >4330.12</td>\n      <td id=\"T_0caaa_row4_col9\" class=\"data row4 col9\" >18936.14</td>\n      <td id=\"T_0caaa_row4_col10\" class=\"data row4 col10\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_0caaa_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n      <td id=\"T_0caaa_row5_col0\" class=\"data row5 col0\" >24.82</td>\n      <td id=\"T_0caaa_row5_col1\" class=\"data row5 col1\" >25.85</td>\n      <td id=\"T_0caaa_row5_col2\" class=\"data row5 col2\" >25.41</td>\n      <td id=\"T_0caaa_row5_col3\" class=\"data row5 col3\" >359.22</td>\n      <td id=\"T_0caaa_row5_col4\" class=\"data row5 col4\" >469.38</td>\n      <td id=\"T_0caaa_row5_col5\" class=\"data row5 col5\" >171.40</td>\n      <td id=\"T_0caaa_row5_col6\" class=\"data row5 col6\" >4713.80</td>\n      <td id=\"T_0caaa_row5_col7\" class=\"data row5 col7\" >9921.62</td>\n      <td id=\"T_0caaa_row5_col8\" class=\"data row5 col8\" >4298.58</td>\n      <td id=\"T_0caaa_row5_col9\" class=\"data row5 col9\" >18934.00</td>\n      <td id=\"T_0caaa_row5_col10\" class=\"data row5 col10\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_0caaa_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n      <td id=\"T_0caaa_row6_col0\" class=\"data row6 col0\" >25.61</td>\n      <td id=\"T_0caaa_row6_col1\" class=\"data row6 col1\" >25.69</td>\n      <td id=\"T_0caaa_row6_col2\" class=\"data row6 col2\" >25.40</td>\n      <td id=\"T_0caaa_row6_col3\" class=\"data row6 col3\" >357.30</td>\n      <td id=\"T_0caaa_row6_col4\" class=\"data row6 col4\" >466.87</td>\n      <td id=\"T_0caaa_row6_col5\" class=\"data row6 col5\" >175.83</td>\n      <td id=\"T_0caaa_row6_col6\" class=\"data row6 col6\" >4664.85</td>\n      <td id=\"T_0caaa_row6_col7\" class=\"data row6 col7\" >9857.20</td>\n      <td id=\"T_0caaa_row6_col8\" class=\"data row6 col8\" >4411.38</td>\n      <td id=\"T_0caaa_row6_col9\" class=\"data row6 col9\" >18933.43</td>\n      <td id=\"T_0caaa_row6_col10\" class=\"data row6 col10\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_0caaa_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n      <td id=\"T_0caaa_row7_col0\" class=\"data row7 col0\" >25.28</td>\n      <td id=\"T_0caaa_row7_col1\" class=\"data row7 col1\" >25.57</td>\n      <td id=\"T_0caaa_row7_col2\" class=\"data row7 col2\" >25.44</td>\n      <td id=\"T_0caaa_row7_col3\" class=\"data row7 col3\" >358.58</td>\n      <td id=\"T_0caaa_row7_col4\" class=\"data row7 col4\" >465.93</td>\n      <td id=\"T_0caaa_row7_col5\" class=\"data row7 col5\" >175.48</td>\n      <td id=\"T_0caaa_row7_col6\" class=\"data row7 col6\" >4697.45</td>\n      <td id=\"T_0caaa_row7_col7\" class=\"data row7 col7\" >9833.37</td>\n      <td id=\"T_0caaa_row7_col8\" class=\"data row7 col8\" >4402.44</td>\n      <td id=\"T_0caaa_row7_col9\" class=\"data row7 col9\" >18933.27</td>\n      <td id=\"T_0caaa_row7_col10\" class=\"data row7 col10\" >1.00</td>\n    </tr>\n  </tbody>\n</table>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "lec-8_files\\figure-revealjs"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}